#N canvas 345 28 1039 808 10;
#X obj 41 79 gemwin;
#X msg 41 57 create \, 1;
#X msg 109 57 0;
#X obj 41 34 loadbang;
#N canvas 16 329 450 300 init 0;
#X obj 81 183 outlet;
#X obj 81 143 loadbang;
#X msg 81 163 dimen 320 240;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X restore 83 79 pd init;
#X obj 633 98 cnv 15 200 200 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 641 263 pix_texture;
#X obj 641 143 gemhead 10;
#X msg 762 257 mode \$1;
#X obj 762 237 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 758 149 openpanel;
#X msg 757 168 open \$1;
#X msg 758 128 bang;
#X msg 566 220 texunit 1;
#X obj 503 198 cnv 15 15 15 empty empty empty 20 12 0 14 -261234 -66577
0;
#X obj 641 202 pix_image car.jpg;
#X text 520 198 1 set texunit;
#X obj 158 82 cnv 15 200 310 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 173 96 gemhead;
#X obj 173 366 glsl_program;
#X obj 173 265 glsl_fragment;
#X obj 173 165 glsl_vertex;
#X obj 221 312 pack 0 0;
#X obj 248 287 change;
#X msg 221 332 link \$1 \$2;
#X floatatom 292 287 0 0 0 0 - - -;
#X floatatom 281 188 0 0 0 0 - - -;
#X obj 236 188 change;
#X obj 236 208 t b f;
#X msg 214 136 open v001.co2.vert;
#X msg 185 241 open v001.co2.additive.frag;
#X obj 122 614 pix_texture;
#X msg 277 581 mode \$1;
#X obj 277 563 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 167 559 texunit 0;
#X obj 122 668 square 4;
#X floatatom 630 379 5 0 1 0 - - -;
#X msg 441 318 tex0 0;
#X msg 521 318 tex1 1;
#X obj 495 593 pix_texture;
#X obj 185 458 gemframebuffer;
#X floatatom 571 572 5 0 0 0 - - -;
#X obj 185 482 translateXYZ 0 0 -4;
#X obj 496 642 square 1;
#X msg 166 581 texunit 2;
#X msg 440 358 tex0 2;
#X msg 630 401 amount \$1 \$1 \$1 0;
#X obj 231 117 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 231 96 loadbang;
#X obj 422 316 cnv 15 15 15 empty empty empty 20 12 0 14 -261234 -66577
0;
#X obj 381 461 openpanel;
#X msg 381 481 open \$1;
#X msg 381 440 bang;
#X obj 107 418 cnv 15 15 15 empty empty empty 20 12 0 14 -261234 -66577
0;
#X text 125 417 finally try to use gemframebuffer;
#X obj 122 516 pix_image fractal.jpg;
#X msg 630 356 0.5;
#X obj 668 356 cnv 15 15 15 empty empty empty 20 12 0 14 -261234 -66577
0;
#X obj 503 315 cnv 15 15 15 empty empty empty 20 12 0 14 -261234 -66577
0;
#X text 431 289 2 set texunits;
#X text 686 354 3 play with amount;
#X text 655 476 1) the shader works after steps 1-3;
#X text 655 496 2) I want to use gemframebuffer to get the image onto
the small white square on the right side;
#X text 655 536 3) connecting glsl_program to gemframebuffer and disconnecting
glsl_program to pix_image the does not give me the correct result;
#X obj 495 619 translateXYZ 3.5 0 0;
#X obj 495 552 gemhead 51;
#X obj 495 572 separator;
#X obj 298 664 pix_video;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 1 0;
#X connect 4 0 0 0;
#X connect 7 0 15 0;
#X connect 8 0 6 0;
#X connect 9 0 8 0;
#X connect 10 0 11 0;
#X connect 11 0 15 0;
#X connect 12 0 10 0;
#X connect 13 0 6 0;
#X connect 15 0 6 0;
#X connect 18 0 21 0;
#X connect 19 0 40 0;
#X connect 20 0 19 0;
#X connect 20 1 25 0;
#X connect 20 1 23 0;
#X connect 21 0 20 0;
#X connect 21 1 26 0;
#X connect 21 1 27 0;
#X connect 22 0 24 0;
#X connect 23 0 22 0;
#X connect 24 0 19 0;
#X connect 27 0 28 0;
#X connect 28 0 22 0;
#X connect 28 1 22 1;
#X connect 29 0 21 0;
#X connect 30 0 20 0;
#X connect 31 0 35 0;
#X connect 32 0 31 0;
#X connect 33 0 32 0;
#X connect 34 0 31 0;
#X connect 36 0 46 0;
#X connect 37 0 19 0;
#X connect 38 0 19 0;
#X connect 39 0 64 0;
#X connect 40 0 42 0;
#X connect 40 1 41 0;
#X connect 41 0 39 1;
#X connect 42 0 67 0;
#X connect 44 0 31 0;
#X connect 45 0 19 0;
#X connect 46 0 19 0;
#X connect 47 0 29 0;
#X connect 47 0 30 0;
#X connect 48 0 47 0;
#X connect 50 0 51 0;
#X connect 51 0 55 0;
#X connect 52 0 50 0;
#X connect 56 0 36 0;
#X connect 64 0 43 0;
#X connect 65 0 66 0;
#X connect 66 0 39 0;
#X connect 67 0 31 0;
